/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package engtelecom.poo;

import java.io.IOException;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Scanner;

public class App {

    public String menu() {

        Scanner entrada = new Scanner(System.in);
        System.out.printf("> ");
        String opcao = entrada.nextLine();
        return opcao;
    }

    public boolean ls(){
        String currentDir = System.getProperty("user.dir");
        Path dir = Path.of(currentDir);
        try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir)) {
            for (Path path : stream) {
                System.out.println(path.getFileName());
            }
        } catch (IOException e) {
            System.err.println("Erro: " + e);
        }

        return false;
    }

    public boolean stat(String arq){
        // Obtendo propriedade do sistema
        // https://docs.oracle.com/javase/tutorial/essential/environment/sysprop.html
        // Diretório atual onde o programa está sendo executado
        String currentDir = System.getProperty("user.dir");

        Path path = Path.of(currentDir+"/" +arq);

        if (Files.exists(path)) {
            System.out.println(String.format("Arquivo: %s", path.toAbsolutePath()));
            System.out.println(String.format("Regular: %s", Files.isRegularFile(path)));
            System.out.println(String.format("Diretório: %s", Files.isDirectory(path)));
            System.out.println(String.format("Permissão de leitura: %s", Files.isReadable(
                    path)));
            System.out.println(String.format("Permissão de escrita: %s", Files.isWritable(
                    path)));
        } else {
            System.out.println("Arquivo não encontrado");
        }
        return false;
    }

    public boolean touch(String arq) {
        String currentDir = System.getProperty("user.dir");
        Path path = Path.of(currentDir+"/"+arq);
        try {
            Files.createFile(path);
            System.out.println("Arquivo criado");
                   }
    } catch (Exception e)
            System.err.println("Erro: " + e);

    {

    }


    public boolean rm(){
        return  false;
    }
    public boolean mv(){
        return false;
    }


    public static void main(String[] args) {


        App app = new App();
        String opcao;

        do {
            opcao = app.menu();
            String [] comandos = opcao.split(" ");

            switch (comandos[0]) {

                case "ls" -> app.ls();
                case "stat" -> app.stat(comandos[1]);
                case "touch" -> app.touch(comandos[1]);
                case "rm" -> app.rm();
                case "mv" -> app.mv();
            }
        } while (opcao != "exit");

    }
}
